{"version":3,"file":"index.cjs.js","sources":["../src/jsonParse.js","../src/clampValue.js","../src/debounce.js","../src/mapValueFromInputToOutputRange.js","../src/throttle.js","../src/index.js"],"sourcesContent":["export const jsonParse = (data) => new Promise((resolve, reject) => {\n\ttry {\n\t\tresolve(JSON.parse(data));\n\t} catch (error) {\n\t\t// @value {SyntaxError} error json parse throws SyntaxError\n\t\treject(error);\n\t}\n});\n\nexport const jsonParseSync = (data) => {\n\tlet ret;\n\n\ttry {\n\t\tret = JSON.parse(data);\n\t} catch (error) {\n\t\t// @value {SyntaxError} error json parse throws SyntaxError\n\t\tret = error;\n\t}\n\n\treturn ret;\n};\n\nexport default jsonParse;\n","/**\n * Clamp value between min and max (inclusive)\n *\n * @param {number} val value to clamp\n * @param {number} min minimum value\n * @param {number} max maximum value\n * @returns {number} min <= val <= max\n */\nexport const clampValue = (val, min, max) => Math.min(Math.max(min, val), max);\n\nexport default clampValue;\n","export const debounce = (func, wait, immediate) => {\n\tif (typeof func !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet timeout;\n\n\treturn function debounced(...args) {\n\t\tconst later = () => {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) {\n\t\t\t\tfunc.apply(this, args);\n\t\t\t}\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) {\n\t\t\tfunc.apply(this, args);\n\t\t}\n\t};\n};\n\nexport default debounce;\n","export const mapValueFromInputToOutputRange = (val, inputMin, inputMax, outputMin, outputMax) => (outputMax - outputMin) * (val - inputMin) / (inputMax - inputMin) + outputMin;\n\nexport default mapValueFromInputToOutputRange;\n","export const throttle = (func, wait, immediate) => {\n\tif (typeof func !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet timeout;\n\n\treturn function throttled(...args) {\n\t\tconst later = () => {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) {\n\t\t\t\tfunc.apply(this, args);\n\t\t\t}\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\n\t\tif (!timeout) {\n\t\t\ttimeout = setTimeout(later, wait);\n\t\t}\n\t\tif (callNow) {\n\t\t\tfunc.apply(this, args);\n\t\t}\n\t};\n};\n\nexport default throttle;\n","import { jsonParse, jsonParseSync } from './jsonParse.js';\nimport clampValue from './clampValue.js';\nimport debounce from './debounce.js';\nimport mapValueFromInputToOutputRange from './mapValueFromInputToOutputRange.js';\nimport throttle from './throttle.js';\n\nexport default {\n\tclampValue\n\t, debounce\n\t, jsonParse\n\t, jsonParseSync\n\t, mapValueFromInputToOutputRange\n\t, throttle\n};\n"],"names":["jsonParse","data","Promise","resolve","reject","JSON","parse","error","jsonParseSync","ret","clampValue","val","min","max","Math","debounce","func","wait","immediate","TypeError","timeout","args","callNow","clearTimeout","setTimeout","apply","this","mapValueFromInputToOutputRange","inputMin","inputMax","outputMin","outputMax","throttle","later"],"mappings":"aAAO,MAAMA,UAAaC,GAAS,IAAIC,QAAQ,CAACC,EAASC,SAEvDD,EAAQE,KAAKC,MAAML,IAClB,MAAOM,GAERH,EAAOG,MAIIC,cAAiBP,QACzBQ,MAGHA,EAAMJ,KAAKC,MAAML,GAChB,MAAOM,GAERE,EAAMF,SAGAE,GCXKC,WAAa,CAACC,EAAKC,EAAKC,IAAQC,KAAKF,IAAIE,KAAKD,IAAID,EAAKD,GAAME,GCR7DE,SAAW,CAACC,EAAMC,EAAMC,QAChB,mBAATF,QACJ,IAAIG,UAAU,2BAGjBC,SAEG,YAAsBC,SAOtBC,EAAUJ,IAAcE,EAE9BG,aAAaH,GACbA,EAAUI,WATI,KACbJ,EAAU,KACLF,GACJF,EAAKS,MAAMC,KAAML,IAMSJ,GACxBK,GACHN,EAAKS,MAAMC,KAAML,KCnBPM,+BAAiC,CAAChB,EAAKiB,EAAUC,EAAUC,EAAWC,KAAeA,EAAYD,IAAcnB,EAAMiB,IAAaC,EAAWD,GAAYE,ECAzJE,SAAW,CAAChB,EAAMC,EAAMC,QAChB,mBAATF,QACJ,IAAIG,UAAU,2BAGjBC,SAEG,YAAsBC,SACtBY,EAAQ,KACbb,EAAU,KACLF,GACJF,EAAKS,MAAMC,KAAML,IAGbC,EAAUJ,IAAcE,EAEzBA,IACJA,EAAUI,WAAWS,EAAOhB,IAEzBK,GACHN,EAAKS,MAAMC,KAAML,KCdpB,UAAe,CACdX,WAAAA,WACEK,SAAAA,SACAf,UAAAA,UACAQ,cAAAA,cACAmB,+BAAAA,+BACAK,SAAAA"}