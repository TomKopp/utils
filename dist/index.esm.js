const t=t=>new Promise((n,e)=>{try{n(JSON.parse(t))}catch(t){e(t)}}),n=t=>{let n;try{n=JSON.parse(t)}catch(t){n=t}return n},e=(t,n,e)=>Math.min(Math.max(n,t),e),r=TypeError("Expected a function"),o=(t,n,e=!1)=>{if("function"!=typeof t)throw new r;let o;return function(...r){const i=e&&!o;clearTimeout(o),o=setTimeout(()=>{o=null,e||t.apply(this,r)},n),i&&t.apply(this,r)}},i=(t,n,e,r,o)=>(o-r)*(t-n)/(e-n)+r,u=(t,n,e=!1)=>{if("function"!=typeof t)throw new r;let o;return function(...r){const i=()=>{o=null,e||t.apply(this,r)},u=e&&!o;o||(o=setTimeout(i,n)),u&&t.apply(this,r)}},l=(t,n=!1)=>{if("function"!=typeof t)throw new r;let e;return function(...r){const o=()=>{e=null,n||t.apply(this,r)},i=n&&!e;e||(e=requestAnimationFrame(o)),i&&t.apply(this,r)}};function p(t){return null!==t}function c(t){return t?"":null}export{r as ExpectedFunctionError,p as attr2bool,c as bool2attr,e as clampValue,o as debounce,t as jsonParse,n as jsonParseSync,i as mapValueFromInputToOutputRange,l as rAFthrottle,u as throttle};
//# sourceMappingURL=index.esm.js.map
